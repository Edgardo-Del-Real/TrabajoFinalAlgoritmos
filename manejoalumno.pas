UNIT MANEJOALUMNO;

{$CODEPAGE UTF8}

INTERFACE

    USES
        CRT, ARCHIVOALUM, UNITARBOL, SYSUTILS, VALIDACIONES;

PROCEDURE CARGARDATOSALUMNO (VAR X:T_DATO_ALUMNOS);
PROCEDURE PASAR_DATOS (VAR ARCH: T_ARCHIVO_ALUMNOS; VAR RAIZLEGAJO,RAIZAPYNOM:T_PUNT_ARBOL);
PROCEDURE CARGARALUMNO(VAR ARCHIVOALUMNO:T_ARCHIVO_ALUMNOS; VAR FINARCH:CARDINAL; X:T_DATO_ALUMNOS);
PROCEDURE DARALTAALUMNO (VAR ARCHIVOALUMNO:T_ARCHIVO_ALUMNOS; VAR X:T_DATO_ALUMNOS);
PROCEDURE MUESTRADATOSALUMNO(X:T_DATO_ALUMNOS);
PROCEDURE CONSULTAALUMNOS(VAR RAIZAPYNOM, RAIZLEGAJO: T_PUNT_ARBOL ; VAR ARCHIVOALUMNO:T_ARCHIVO_ALUMNOS);
PROCEDURE BAJAALUMNO(VAR RAIZAPYNOM, RAIZLEGAJO: T_PUNT_ARBOL; VAR ARCHIVOALUMNO: T_ARCHIVO_ALUMNOS);
PROCEDURE MODIFICARALUMNO(VAR RAIZAPYNOM, RAIZLEGAJO: T_PUNT_ARBOL; VAR ARCHIVOALUMNO: T_ARCHIVO_ALUMNOS);
PROCEDURE MUESTRA_REGISTRO_POR_TABLA (VAR X: T_DATO_ALUMNOS);

IMPLEMENTATION
PROCEDURE PASAR_DATOS (VAR ARCH: T_ARCHIVO_ALUMNOS; VAR RAIZLEGAJO,RAIZAPYNOM:T_PUNT_ARBOL);
VAR
  X:T_DATO_ALUMNOS;
  I:BYTE;
  R1,R:T_DATO_ARBOL;
BEGIN
  I:=0;
  IF FILESIZE (ARCH) >= 1 THEN
  BEGIN
       WHILE NOT EOF(ARCH) DO
       BEGIN
         SEEK (ARCH, I);
         READ (ARCH, X);
         R.CLAVE:=X.NUM_LEGAJO;
         R.POSARCH:= I;
         AGREGAR_ARBOL (RAIZLEGAJO,R);
         R1.CLAVE:=X.APYNOM;
         R1.POSARCH:= I;
         AGREGAR_ARBOL (RAIZAPYNOM,R1);
         I:= I + 1;
       END;
  END;
END;

PROCEDURE CARGARDATOSALUMNO (VAR X:T_DATO_ALUMNOS);
VAR
    DISC:CHAR;
    I:BYTE;
    FECHA:STRING;
BEGIN
  CLRSCR;
  WITH X DO
      BEGIN
        TEXTCOLOR(WHITE);
        GOTOXY(50,10);
        WRITELN('**ALTA ALUMNO**');
        TEXTCOLOR(GREEN);
        GOTOXY(45,12);
        WRITE('INGRESE NUMERO DE LEGAJO: ');
        TEXTCOLOR(WHITE);
        READLN(NUM_LEGAJO);
        TEXTCOLOR(GREEN);
        GOTOXY(45,14);
        WRITE('INGRESE NOMBRE Y APELLIDO: ');
        TEXTCOLOR(WHITE);
        READLN(APYNOM);
        TEXTCOLOR(RED);
        GOTOXY(45,16);
        WRITELN('INGRESE FECHA DE NACIMIENTO. EJ: 08/09/2001');
        TEXTCOLOR(GREEN);
        GOTOXY(45,18);
        WRITE('INGRESE DIA: ');
        TEXTCOLOR(WHITE);
        READLN(FECHA_NAC.DIA);
        TEXTCOLOR(GREEN);
        GOTOXY(45,20);
        WRITE('INGRESE MES: ');
        TEXTCOLOR(WHITE);
        READLN(FECHA_NAC.MES);
        TEXTCOLOR(GREEN);
        GOTOXY(45,22);
        WRITE('INGRESE AÑO DE NACIMIENTO: ');
        TEXTCOLOR(WHITE);
        READLN(FECHA_NAC.ANIO);
        FECHA:=(INTTOSTR(X.FECHA_NAC.DIA)) + ' / ' + (INTTOSTR(X.FECHA_NAC.MES)) + ' / ' + (INTTOSTR(X.FECHA_NAC.ANIO));

              while not EsFechaValida(fecha) do
              begin
              CLRSCR;
              TEXTCOLOR(RED);
              GOTOXY(45,16);
              WRITELN('FECHA INGRESADA INVALIDA. POR FAVOR REVISE COHERENCIA DE SUS DATOS');
              TEXTCOLOR(GREEN);
              WRITELN('DEBE CARGAR 1 DATO POR VEZ');
              TEXTCOLOR(GREEN);
              GOTOXY(45,18);
              WRITE('INGRESE DIA: ');
              TEXTCOLOR(WHITE);
              READLN(FECHA_NAC.DIA);
              TEXTCOLOR(GREEN);
              GOTOXY(45,20);
              WRITE('INGRESE MES: ');
              TEXTCOLOR(WHITE);
              READLN(FECHA_NAC.MES);
              TEXTCOLOR(GREEN);
              GOTOXY(45,22);
              WRITE('INGRESE AÑO DE NACIMIENTO: ');
              TEXTCOLOR(WHITE);
              READLN(FECHA_NAC.ANIO);
              FECHA:=(INTTOSTR(X.FECHA_NAC.DIA)) + ' / ' + (INTTOSTR(X.FECHA_NAC.MES)) + ' / ' + (INTTOSTR(X.FECHA_NAC.ANIO));
              end;


        GOTOXY(45,24);
        WRITE('AHORA SELECCIONE LAS DISCAPACIDADES, ');
        TEXTCOLOR(RED);
        WRITELN('OPRIMA T SI LA TIENE Y F SI NO LA TIENE');
        FOR I:=1 TO 5 DO
        BEGIN
              TEXTCOLOR(GREEN);
              GOTOXY(45,27);
              WRITE('DISCAPACIDAD ', I, ' :');
              TEXTCOLOR(WHITE);
              READLN(DISC);
              IF UPCASE(DISC) = 'T' THEN
                  DISCAPACIDAD[I]:=TRUE
              ELSE
                  DISCAPACIDAD[I]:=FALSE;
        END;
        ESTADO:= TRUE;
      END;
  CLRSCR;
END;

PROCEDURE CARGARALUMNO(VAR ARCHIVOALUMNO:T_ARCHIVO_ALUMNOS; VAR FINARCH:CARDINAL; X:T_DATO_ALUMNOS);
BEGIN
SEEK(ARCHIVOALUMNO, FINARCH);
WRITE(ARCHIVOALUMNO,X);
END;

PROCEDURE DARALTAALUMNO (VAR ARCHIVOALUMNO:T_ARCHIVO_ALUMNOS; VAR X:T_DATO_ALUMNOS);
VAR
    FINARCH:CARDINAL;
BEGIN
    CARGARDATOSALUMNO(X);
    FINARCH:= FILESIZE(ARCHIVOALUMNO);
    CARGARALUMNO(ARCHIVOALUMNO, FINARCH, X);
END;

PROCEDURE MUESTRADATOSALUMNO(X:T_DATO_ALUMNOS);
VAR
    I:BYTE;
BEGIN
  CLRSCR;
  WITH X DO
    BEGIN
      GOTOXY(45,5);
      TEXTCOLOR(RED);
      WRITELN('DATOS ACTUALES DEL ALUMNO');
      GOTOXY(45,7);
      TEXTCOLOR (GREEN);
      WRITE('NUMERO DE LEGAJO: ');
      TEXTCOLOR(WHITE);
      WRITE(NUM_LEGAJO);
      GOTOXY(45,9);
      TEXTCOLOR (GREEN);
      WRITE('NOMBRE Y APELLIDO: ');
      TEXTCOLOR(WHITE);
      WRITE(APYNOM);
      GOTOXY(45,11);
      TEXTCOLOR (GREEN);
      WRITE('FECHA DE NACIMIENTO: ');
      TEXTCOLOR(WHITE);
      WRITE(FECHA_NAC.DIA,'/',FECHA_NAC.MES,'/',FECHA_NAC.ANIO);
      GOTOXY(45,13);
      TEXTCOLOR (GREEN);
      WRITE('ESTADO: ');
      TEXTCOLOR(WHITE);
      WRITE(ESTADO);
      GOTOXY(45,15);
      TEXTCOLOR(GREEN);
      WRITELN('DISCAPACIDAD/ES:');
      TEXTCOLOR(WHITE);
      GOTOXY(45,17);
      WRITE('PROBLEMAS DEL HABLA Y LENGUAJE: ');
      TEXTCOLOR(GREEN);
      WRITELN(DISCAPACIDAD[1]);
      TEXTCOLOR(WHITE);
      GOTOXY(45,19);
      WRITE('DIFICULTAD PARA ESCRIBIR: ');
      TEXTCOLOR(GREEN);
      WRITELN(DISCAPACIDAD[2]);
      TEXTCOLOR(WHITE);
      GOTOXY(45,21);
      WRITE('DIFICULTADES DE APRENDIZAJE VISUAL: ');
      TEXTCOLOR(GREEN);
      WRITELN(DISCAPACIDAD[3]);
      TEXTCOLOR(WHITE);
      GOTOXY(45,23);
      WRITE('MEMORIA Y OTRAS DIFICULTADES DEL PENSAMIENTO: ');
      TEXTCOLOR(GREEN);
      WRITELN(DISCAPACIDAD[4]);
      TEXTCOLOR(WHITE);
      GOTOXY(45,25);
      WRITE('DESTREZAS SOCIALES INADECUADAS: ');
      TEXTCOLOR(GREEN);
      WRITELN(DISCAPACIDAD[5]);
    END;
END;

PROCEDURE CONSULTAALUMNOS(VAR RAIZAPYNOM, RAIZLEGAJO: T_PUNT_ARBOL ; VAR ARCHIVOALUMNO:T_ARCHIVO_ALUMNOS);
VAR
  BUSCADO: STRING;
  POS: INTEGER;
  X: T_DATO_ALUMNOS;
BEGIN
  CLRSCR;
  GOTOXY(47,10);
  WRITELN('**CONSULTA ALUMNO POR APELLIDO Y NOMBRE**');
  TEXTCOLOR(GREEN);
  GOTOXY(45,12);
  WRITE('INGRESE NOMBRE Y APELLIDO O LEGAJO DEL ALUMNO: ');
  TEXTCOLOR(WHITE);
  READLN(BUSCADO);
  POS := PREORDEN(RAIZAPYNOM, BUSCADO);
  IF POS = -1 THEN
      POS := PREORDEN(RAIZLEGAJO, BUSCADO);
  BEGIN
    SEEK(ARCHIVOALUMNO, POS);
    READ(ARCHIVOALUMNO, X);
    MUESTRADATOSALUMNO(X);
  END;
  READKEY;
  CLRSCR;
END;



PROCEDURE BAJAALUMNO(VAR RAIZAPYNOM, RAIZLEGAJO: T_PUNT_ARBOL; VAR ARCHIVOALUMNO: T_ARCHIVO_ALUMNOS);
VAR
  BUSCADO: STRING;
  POS: INTEGER;
  X: T_DATO_ALUMNOS;
BEGIN
  CLRSCR;
  TEXTCOLOR(WHITE);
  GOTOXY(60,10);
  WRITELN('**BAJA ALUMNO**');
  TEXTCOLOR(GREEN);
  GOTOXY(45,12);
  WRITE('INGRESE APELLIDO Y NOMBRE O LEGAJO DEL ALUMNO: ');
  TEXTCOLOR(WHITE);
  READLN(BUSCADO);
  POS := PREORDEN(RAIZAPYNOM, BUSCADO);
  IF POS = -1 THEN
    POS := PREORDEN(RAIZLEGAJO, BUSCADO);
  BEGIN
    // LEER EL REGISTRO DEL ARCHIVO DE ALUMNOS EN LA POSICIÓN POS
    SEEK(ARCHIVOALUMNO, POS);
    READ(ARCHIVOALUMNO, X);

    IF NOT X.ESTADO THEN
      BEGIN
        GOTOXY(45,14);
        WRITELN('ALUMNO YA DADO DE BAJA')
      END
    ELSE
      BEGIN
        X.ESTADO := FALSE;
        // SOBREESCRIBIR EL REGISTRO EN EL ARCHIVO DE ALUMNOS
        SEEK(ARCHIVOALUMNO, POS);
        WRITE(ARCHIVOALUMNO, X);
        GOTOXY(45,16);
        WRITELN('ALUMNO DADO DE BAJA CORRECTAMENTE');
      END;
  END;
  READKEY;
  CLRSCR;
END;

PROCEDURE MODIFICARALUMNO(VAR RAIZAPYNOM, RAIZLEGAJO: T_PUNT_ARBOL; VAR ARCHIVOALUMNO: T_ARCHIVO_ALUMNOS);
VAR
  BUSCADO: STRING;
  POS: INTEGER;
  X: T_DATO_ALUMNOS;
  OPCION: BYTE;
  I: BYTE;
  ARB: T_DATO_ARBOL;
  DISC:CHAR;
BEGIN
  CLRSCR;
  GOTOXY(60,10);
  WRITELN('**MODIFICAR ALUMNO**');
  TEXTCOLOR(GREEN);
  GOTOXY(45,12);
  WRITE('INGRESE APELLIDO Y NOMBRE DEL ALUMNO: ');
  TEXTCOLOR(WHITE);
  READLN(BUSCADO);
  POS := PREORDEN(RAIZAPYNOM, BUSCADO);
  IF POS = -1 THEN
    POS := PREORDEN(RAIZLEGAJO, BUSCADO);
  BEGIN
    // LEER EL REGISTRO DEL ARCHIVO DE ALUMNOS EN LA POSICIÓN POS
    SEEK(ARCHIVOALUMNO, POS);
    READ(ARCHIVOALUMNO, X);

    // MOSTRAR LOS DATOS ACTUALES DEL ALUMNO
    CLRSCR;
    MUESTRADATOSALUMNO(X);
    READKEY;
    CLRSCR;
    TEXTCOLOR(RED);
    GOTOXY(45,10);
    WRITELN('QUE CAMPO DESEA MODIFICAR?');  //AGREGAR OPCION 0 QUE SEA VOLVER HACIA ATRAS
    TEXTCOLOR(GREEN);
    GOTOXY(45,12);
    WRITE('1- ');
    TEXTCOLOR(WHITE);
    WRITELN('NOMBRE Y APELLIDO');
    TEXTCOLOR(GREEN);
    GOTOXY(45,14);
    WRITE('2- ');
    TEXTCOLOR(WHITE);
    WRITELN('FECHA DE NACIMIENTO');
    TEXTCOLOR(GREEN);
    GOTOXY(45,16);
    WRITE('3- ');
    TEXTCOLOR(WHITE);
    WRITELN('DISCAPACIDAD');
    TEXTCOLOR(GREEN);
    GOTOXY(45,18);
    WRITE('4- ');
    TEXTCOLOR(WHITE);
    WRITELN('ESTADO');
    TEXTCOLOR(GREEN);
    GOTOXY(45,20);
    WRITE('RESPUESTA: ');
    TEXTCOLOR(WHITE);
    READLN(OPCION);
    CASE OPCION OF
      1:
        BEGIN
          CLRSCR;
          TEXTCOLOR(GREEN);
          GOTOXY(45,10);
          WRITE('INGRESE NUEVO NOMBRE Y APELLIDO: ');
          TEXTCOLOR(WHITE);
          READLN(X.APYNOM);
          ARB.CLAVE := X.APYNOM;
          AGREGAR_ARBOL(RAIZAPYNOM, ARB);
        END;
      2:
        BEGIN
          CLRSCR;
          TEXTCOLOR(RED);
          GOTOXY(45,10);
          WRITELN('INGRESE FECHA DE NACIMIENTO. EJ: 08/09/2001');
          TEXTCOLOR(GREEN);
          GOTOXY(45,12);
          WRITE('INGRESE DIA: ');
          TEXTCOLOR(WHITE);
          READLN(X.FECHA_NAC.DIA);
          TEXTCOLOR(GREEN);
          GOTOXY(45,14);
          WRITE('INGRESE MES: ');
          TEXTCOLOR(WHITE);
          READLN(X.FECHA_NAC.MES);
          TEXTCOLOR(GREEN);
          GOTOXY(45,16);
          WRITE('INGRESE AÑO DE NACIMIENTO: ');
          TEXTCOLOR(WHITE);
          READLN(X.FECHA_NAC.ANIO);
        END;
      3:
        BEGIN
          CLRSCR;
          GOTOXY(45,10);
          WRITELN('INGRESE DISCAPACIDAD: ');
          TEXTCOLOR(RED);
          GOTOXY(45,12);
          WRITELN('OPRIMA T SI LA TIENE Y F SI NO LA TIENE');
            FOR I:= 1 TO 5 DO
            BEGIN
                TEXTCOLOR(GREEN);
                GOTOXY(45,14);
                WRITE('DISCAPACIDAD ', I, ' :');
                TEXTCOLOR(WHITE);
                READLN(DISC);
                IF UPCASE(DISC) = 'T' THEN
                X.DISCAPACIDAD[I]:=TRUE
                ELSE
                X.DISCAPACIDAD[I]:=FALSE;
            END;
        END;
      4:
        BEGIN
          CLRSCR;
          TEXTCOLOR(RED);
          GOTOXY(45,10);
          WRITELN('SE CAMBIO EL ESTADO DEL ALUMNO');
          X.ESTADO := NOT X.ESTADO;
        END;
    END;

    // SOBREESCRIBIR EL REGISTRO EN EL ARCHIVO DE ALUMNOS
    SEEK(ARCHIVOALUMNO, POS);
    WRITE(ARCHIVOALUMNO, X);
    TEXTCOLOR(WHITE);
    GOTOXY(45,20);
    WRITELN('ALUMNO MODIFICADO CORRECTAMENTE');
  END;
  READKEY;
  CLRSCR;
END;

PROCEDURE MUESTRA_REGISTRO_POR_TABLA (VAR X: T_DATO_ALUMNOS);
VAR
  FECHA:STRING;
BEGIN
  FECHA:=(INTTOSTR(X.FECHA_NAC.DIA)) + ' / ' + (INTTOSTR(X.FECHA_NAC.MES)) + ' / ' + (INTTOSTR(X.FECHA_NAC.ANIO));
  WITH X DO
  BEGIN
    WRITE(NUM_LEGAJO:10, APYNOM:28, FECHA:20, ESTADO:10, DISCAPACIDAD[1]:12, DISCAPACIDAD[2]:10, DISCAPACIDAD[3]:10, DISCAPACIDAD[4]:10, DISCAPACIDAD[5]:10);
    WRITELN;
  END;
END;

END.