UNIT LISTADOS;

{$CODEPAGE UTF8}

INTERFACE

USES
  UNITARBOL, ARCHIVOALUM, CRT, MANEJOALUMNO, ARCHIVOEVAL, MANEJOEVAL, SYSUTILS, VALIDACIONES;

PROCEDURE MOSTRAR_ENCABEZADO_TABLA;
PROCEDURE GENERAR_ARBOL_LEGAJO(VAR RAIZ:T_PUNT_ARBOL;VAR ARCH:T_ARCHIVO_ALUMNOS);
PROCEDURE LISTADO_APYNOM (VAR ARCH:T_ARCHIVO_ALUMNOS; RAIZAPYNOM: T_PUNT_ARBOL);
PROCEDURE MOSTRAR_REGISTRO_POR_POSICION(VAR ARCH:T_ARCHIVO_ALUMNOS; POS: WORD);
PROCEDURE LISTADO_POR_ENFERMEDAD (VAR ARCH:T_ARCHIVO_ALUMNOS);
PROCEDURE CONSULTAEVALDEALUMNO(VAR ARCHIVOEVAL:T_ARCHIVO_EVAL; RAIZLEGAJO, RAIZAPYNOM:T_PUNT_ARBOL);
PROCEDURE MOSTRAR_ENCABEZADO_TABLA_ARCHIVO;
PROCEDURE INORDEN_APYNOM(VAR RAIZ: T_PUNT_ARBOL; VAR ARCH:T_ARCHIVO_ALUMNOS; VAR Y:INTEGER);
PROCEDURE RECUPERAR_ALUMNO(VAR ARCH:T_ARCHIVO_ALUMNOS;POS:INTEGER;VAR X:T_DATO_ALUMNOS);
PROCEDURE GENERAR_ARBOL(VAR RAIZ:T_PUNT_ARBOL;VAR ARCH:T_ARCHIVO_ALUMNOS);

IMPLEMENTATION

PROCEDURE MOSTRAR_ENCABEZADO_TABLA;
BEGIN
  GOTOXY(1, 1);
  TEXTCOLOR(LIGHTBLUE);
  WRITELN('LEGAJO':10, ' NOMBRE Y APELLIDO   ':30, ' NACIMIENTO   ':20, ' ESTADO ':10, ' DIS1':10, ' DIS2':10, ' DIS3':10, ' DIS4':10, ' DIS5':10 );
  WRITELN;
  TEXTCOLOR(WHITE);
END;

PROCEDURE MOSTRAR_REGISTRO_POR_POSICION(VAR ARCH:T_ARCHIVO_ALUMNOS; POS: WORD);
VAR
  X: T_DATO_ALUMNOS;
BEGIN
  SEEK(ARCH, POS);
  READ(ARCH, X);
  IF X.ESTADO THEN
  MUESTRA_REGISTRO_POR_TABLA(X);
END;

PROCEDURE MOSTRAR_EN_ORDEN(VAR ARCH:T_ARCHIVO_ALUMNOS; RAIZ: T_PUNT_ARBOL);
BEGIN
  IF RAIZ <> NIL THEN
  BEGIN
    MOSTRAR_EN_ORDEN(ARCH, RAIZ^.SAI);
    RESET(ARCH);
    MOSTRAR_REGISTRO_POR_POSICION(ARCH, RAIZ^.INFO.POSARCH);
    MOSTRAR_EN_ORDEN(ARCH, RAIZ^.SAD);
  END;
END;

PROCEDURE LISTADO_APYNOM (VAR ARCH:T_ARCHIVO_ALUMNOS; RAIZAPYNOM: T_PUNT_ARBOL);
BEGIN
  CLRSCR;
MOSTRAR_ENCABEZADO_TABLA;
MOSTRAR_EN_ORDEN(ARCH,RAIZAPYNOM);
READKEY;
CLRSCR;
END;


PROCEDURE INORDEN_APYNOM(VAR RAIZ: T_PUNT_ARBOL; VAR ARCH:T_ARCHIVO_ALUMNOS; VAR Y:INTEGER);
VAR
  X:T_DATO_ALUMNOS;
BEGIN
  IF RAIZ <> NIL THEN
  BEGIN
    INORDEN_APYNOM(RAIZ^.SAI,ARCH,Y);
    RECUPERAR_ALUMNO(ARCH,RAIZ^.INFO.POSARCH,X);

    IF X.ESTADO THEN
    MUESTRA_REGISTRO_POR_TABLA (X);

    INORDEN_APYNOM(RAIZ^.SAD,ARCH,Y);
  END;
END;

PROCEDURE RECUPERAR_ALUMNO(VAR ARCH:T_ARCHIVO_ALUMNOS;POS:INTEGER;VAR X:T_DATO_ALUMNOS);
BEGIN
  //RESET(ARCH);
  SEEK(ARCH,POS);
  READ(ARCH,X);
  //CLOSE(ARCH);
END;

PROCEDURE GENERAR_ARBOL(VAR RAIZ:T_PUNT_ARBOL;VAR ARCH:T_ARCHIVO_ALUMNOS);
VAR
  X:T_DATO_ALUMNOS;
  E:T_DATO_ARBOL;
BEGIN
  CREAR_ARBOL(RAIZ);
  //RESET(ARCH);
  SEEK(ARCH,0);
  WHILE (NOT EOF(ARCH)) DO
  BEGIN
    READ(ARCH,X);
    E.CLAVE:=X.APYNOM;
    E.POSARCH:=(FILEPOS(ARCH)-1);
    AGREGAR_ARBOL(RAIZ,E);
  END;
  //CLOSE(ARCH);
END;

PROCEDURE GENERAR_ARBOL_LEGAJO(VAR RAIZ:T_PUNT_ARBOL;VAR ARCH:T_ARCHIVO_ALUMNOS);
VAR
  X:T_DATO_ALUMNOS;
  E:T_DATO_ARBOL;
BEGIN
  CREAR_ARBOL(RAIZ);
  //RESET(ARCH);
  SEEK(ARCH,0);
  WHILE (NOT EOF(ARCH)) DO
  BEGIN
    READ(ARCH,X);
    E.CLAVE:=X.NUM_LEGAJO;
    E.POSARCH:=(FILEPOS(ARCH)-1);
    AGREGAR_ARBOL(RAIZ,E);
  END;
  //CLOSE(ARCH);
END;



PROCEDURE LISTADO_POR_ENFERMEDAD (VAR ARCH:T_ARCHIVO_ALUMNOS);
VAR
   I: BYTE;
  X: T_DATO_ALUMNOS;
  POS:STRING;
  POS2:INTEGER;
BEGIN
  CLRSCR;
  GOTOXY(52,10);
  WRITELN('INGRESE LA DISCAPACIDAD A LISTAR: ');
  TEXTCOLOR(GREEN);
  GOTOXY(45,12);
  WRITE('1- ');
  TEXTCOLOR(WHITE);
  WRITELN('PROBLEMAS DEL HABLA Y LENGUAJE');
  TEXTCOLOR(GREEN);
  GOTOXY(45,14);
  WRITE('2- ');
  TEXTCOLOR(WHITE);
  WRITELN('DIFICULTAD PARA ESCRIBIR');
  TEXTCOLOR(GREEN);
  GOTOXY(45,16);
  WRITE('3- ');
  TEXTCOLOR(WHITE);
  WRITELN('DIFICULTADES DE APRENDIZAJE VISUAL');
  TEXTCOLOR(GREEN);
  GOTOXY(45,18);
  WRITE('4- ');
  TEXTCOLOR(WHITE);
  WRITELN('MEMORIA Y OTRAS DIFICULTADES DEL PENSAMIENTO');
  TEXTCOLOR(GREEN);
  GOTOXY(45,20);
  WRITE('5- ');
  TEXTCOLOR(WHITE);
  WRITELN('DESTREZAS SOCIALES INADECUADAS');

  REPEAT
    TEXTCOLOR(GREEN);
    GOTOXY(45,22);
    WRITE('RESPUESTA: ');
    TEXTCOLOR(WHITE);
    READLN(POS);

   IF NOT ESNUMERO(POS) OR (POS = '') THEN
      BEGIN
        TEXTCOLOR(RED);
        GOTOXY(46,24);
        WRITELN('ERROR: INGRESE UN NUMERO ENTRE 0 Y 5.');
        DELAY(1500);
        GOTOXY(46,22);
        CLREOL;
        GOTOXY(42,24);
        CLREOL;
      END
      ELSE
      BEGIN
        IF (POS < '1') OR (POS > '5') THEN
        BEGIN
          TEXTCOLOR(RED);
          GOTOXY(54,24);
          WRITELN('ERROR: OPCION FUERA DE RANGO.');
          DELAY(2000);
          GOTOXY(54,24);
          CLREOL;
          GOTOXY(51,22);
          CLREOL;
        END;
      END;
    UNTIL (ESNUMERO(POS)) AND (POS >= '1') AND (POS <= '5') AND (POS <> '');


  CLRSCR;
  MOSTRAR_ENCABEZADO_TABLA;

  POS2 := STRTOINT(POS);
  FOR I := 0 TO FILESIZE(ARCH)-1 DO
  BEGIN
    SEEK(ARCH, I);
    READ(ARCH, X);
    IF X.DISCAPACIDAD[POS2] AND X.ESTADO THEN
      MUESTRA_REGISTRO_POR_TABLA(X);
  END;

  READKEY;
  CLRSCR;
END;



PROCEDURE MOSTRAR_ENCABEZADO_TABLA_ARCHIVO;
BEGIN
  GOTOXY(1, 1);
  TEXTCOLOR(LIGHTBLUE);
  WRITELN('LEGAJO':10, ' FECHA ':20, ' VALORACIONES ':10, ' VAL1':10, ' VAL2':10, ' VAL3':10, ' VAL4':10, ' VAL5':10 );
  WRITELN;
  TEXTCOLOR(WHITE);
END;



PROCEDURE CONSULTAEVALDEALUMNO(VAR ARCHIVOEVAL:T_ARCHIVO_EVAL; RAIZLEGAJO, RAIZAPYNOM:T_PUNT_ARBOL);
VAR
  BUSCADO: STRING;
  POS,I: INTEGER;
  X: T_DATO_EVAL;
  LEGAJOVALIDO: BOOLEAN;
BEGIN
  CLRSCR;
  TEXTCOLOR(GREEN);
  GOTOXY(45,14);
  WRITE('**                                     **');
  TEXTCOLOR(WHITE);
  GOTOXY(48,14);
  WRITE('CONSULTA DE EVALUACIONES POR ALUMNO ');

  LEGAJOVALIDO := FALSE;

  REPEAT
    TEXTCOLOR(GREEN);
    GOTOXY(48,16);
    WRITE('LEGAJO DEL ALUMNO: ');
    TEXTCOLOR(WHITE);
    READLN(BUSCADO);

    IF NOT (ESNUMERO(BUSCADO))OR (BUSCADO = '') THEN
    BEGIN
      GOTOXY(45,18);
      TEXTCOLOR(RED);
      WRITELN('INGRESE UN NÚMERO VÁLIDO PARA EL LEGAJO ');
      TEXTCOLOR(WHITE);
      DELAY(2000);
      GOTOXY(45,18);
      CLREOL;
      GOTOXY(62,16);
      CLREOL;
      TEXTCOLOR(GREEN);
      LEGAJOVALIDO := FALSE;
    END
    ELSE
      LEGAJOVALIDO := TRUE;
  UNTIL LEGAJOVALIDO;

  CLRSCR;
  MOSTRAR_ENCABEZADO_TABLA_ARCHIVO;
  FOR I := 0 TO FILESIZE(ARCHIVOEVAL) - 1 DO
   BEGIN
    SEEK(ARCHIVOEVAL, I);
    READ(ARCHIVOEVAL, X);
    IF X.NUM_LEGAJO = BUSCADO THEN
    BEGIN
      MUESTRA_REGISTRO_POR_TABLA_EVAL(X);
    END;
  END;

  READKEY;
  CLRSCR;
END;




END.